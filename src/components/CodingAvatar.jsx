/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

const CodingAvatar = (props)  => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('../public/models/CodingAvatar.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions) {
      actions['Typing'].play() 
    }

    return () => {
      if (actions['Typing']) {
        actions['Typing'].stop()
      }
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[0, 0, -0.912]}>
          <skinnedMesh
            name="body"
            geometry={nodes.body.geometry}
            material={materials['purpule shirt']}
            skeleton={nodes.body.skeleton}
          />
          <skinnedMesh
            name="hands"
            geometry={nodes.hands.geometry}
            material={materials.Skin}
            skeleton={nodes.hands.skeleton}
          />
          <skinnedMesh
            name="head_1"
            geometry={nodes.head_1.geometry}
            material={materials.Face}
            skeleton={nodes.head_1.skeleton}
          />
          <skinnedMesh
            name="legs"
            geometry={nodes.legs.geometry}
            material={materials.Jeans}
            skeleton={nodes.legs.skeleton}
          />
          <skinnedMesh
            name="neck_1"
            geometry={nodes.neck_1.geometry}
            material={materials.Skin}
            skeleton={nodes.neck_1.skeleton}
          />
          <skinnedMesh
            name="shirtArms"
            geometry={nodes.shirtArms.geometry}
            material={materials['purpule shirt']}
            skeleton={nodes.shirtArms.skeleton}
          />
          <skinnedMesh
            name="shoes"
            geometry={nodes.shoes.geometry}
            material={materials.shoe}
            skeleton={nodes.shoes.skeleton}
          />
          <primitive object={nodes.torso} />
          <primitive object={nodes.hand_controlL} />
          <primitive object={nodes.elbowL} />
          <primitive object={nodes.hand_controlR} />
          <primitive object={nodes.elbowR} />
          <primitive object={nodes.kneeL} />
          <primitive object={nodes.leg_controlL} />
          <primitive object={nodes.kneeR} />
          <primitive object={nodes.leg_controlR} />
        </group>
        <group
          name="monitor"
          position={[0, 0.111, 0.587]}
          rotation={[-2.895, 0, -Math.PI]}
          scale={[1, 1.073, 1]}>
          <mesh
            name="Cube015"
            castShadow
            receiveShadow
            geometry={nodes.Cube015.geometry}
            material={materials.Mac}
          />
          <mesh
            name="Cube015_1"
            castShadow
            receiveShadow
            geometry={nodes.Cube015_1.geometry}
            material={materials.Mac_Black}
          />
        </group>
        <mesh
          name="keyboard"
          castShadow
          receiveShadow
          geometry={nodes.keyboard.geometry}
          material={materials.Mac}
          position={[0, 0.111, 0.587]}
          rotation={[0, Math.PI / 2, 0]}
          scale={[0.963, 1, 1]}
        />
        <mesh
          name="Screen"
          castShadow
          receiveShadow
          geometry={nodes.Screen.geometry}
          material={materials.screen}
          position={[-0.002, 0.783, 0.735]}
          rotation={[Math.PI, 0, Math.PI]}
        />
        <mesh
          name="Desk"
          castShadow
          receiveShadow
          geometry={nodes.Desk.geometry}
          material={materials.wood}
          position={[0, 0, 0.565]}
          scale={[2.089, 0.143, 1.345]}
        />
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials.chair_wood}
          position={[0, -0.963, -0.868]}
          scale={[0.911, 0.112, 0.566]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/CodingAvatar.glb')

export default CodingAvatar
