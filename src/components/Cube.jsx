/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { gsap } from "gsap";
import { useGSAP } from '@gsap/react';

const Cube = (props) => {
  const { nodes, materials } = useGLTF('/models/Cube.glb')
  const cubeRef = useRef();

  useGSAP(() => {
    gsap.to(cubeRef.current.rotation, {
        y: `${Math.PI}`,
        x: `${Math.PI}`,
        duration: 3,
        repeat: -1,
        ease: 'power2.inOut',
        yoyo: true
    })
  });
  return (
    <group {...props} dispose={null} ref={cubeRef}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials.Skyblue}
      />
    </group>
  )
}

useGLTF.preload('/models/Cube.glb')

export default Cube