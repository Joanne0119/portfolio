/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three' 

const HiAvatar = ({animationName = 'Idel', ...props}) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/hiavatar.glb')
  const { actions, mixer } = useAnimations(animations, group)

  const [activeAction, setActiveAction] = useState(null)

  useEffect(() => {
    console.log(actions);
    console.log(animationName);
    if (actions && animationName) {
      if (activeAction && actions[activeAction]) {
        actions[activeAction].fadeOut(0.5);
      }
      if (actions[animationName]) {
        const currentAction = actions[animationName]
        currentAction.reset()
        currentAction.setLoop(THREE.LoopOnce)  // Play animation only once
        currentAction.clampWhenFinished = true // Stop at the last frame when finished
        currentAction.play()

        // Optional: Add an event listener to detect when the action ends
        currentAction.getMixer().addEventListener('finished', () => {
          // Once animation finishes, reset to Idle if not hovering
          if (animationName !== 'Idel') {
            actions['Idel']?.reset().fadeIn(0.5).play()
          }
        })

        setActiveAction(animationName)
      }
    }
  }, [actions, animationName, activeAction]);
  
  useFrame((_, delta) => mixer.update(delta))

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Armature001_33">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <skinnedMesh
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials['purpule_shirt.001']}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials['Skin.001']}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <skinnedMesh
                    name="Object_11"
                    geometry={nodes.Object_11.geometry}
                    material={materials['Face.001']}
                    skeleton={nodes.Object_11.skeleton}
                  />
                  <skinnedMesh
                    name="Object_13"
                    geometry={nodes.Object_13.geometry}
                    material={materials['Jeans.001']}
                    skeleton={nodes.Object_13.skeleton}
                  />
                  <skinnedMesh
                    name="Object_15"
                    geometry={nodes.Object_15.geometry}
                    material={materials['Skin.001']}
                    skeleton={nodes.Object_15.skeleton}
                  />
                  <skinnedMesh
                    name="Object_17"
                    geometry={nodes.Object_17.geometry}
                    material={materials['purpule_shirt.001']}
                    skeleton={nodes.Object_17.skeleton}
                  />
                  <skinnedMesh
                    name="Object_19"
                    geometry={nodes.Object_19.geometry}
                    material={materials['shoe.001']}
                    skeleton={nodes.Object_19.skeleton}
                  />
                  <group name="body001_26" />
                  <group name="hands001_27" />
                  <group name="head001_28" />
                  <group name="legs001_29" />
                  <group name="neck001_30" />
                  <group name="shirtArms001_31" />
                  <group name="shoes001_32" />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/hiavatar.glb')

export default HiAvatar
