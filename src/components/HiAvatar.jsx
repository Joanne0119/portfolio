/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three' 

const HiAvatar = ({animationName = 'Idel', ...props}) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('../public/models/hiAvatar.glb')
  const { actions, mixer } = useAnimations(animations, group)

  const [activeAction, setActiveAction] = useState(null)

  useEffect(() => {
    console.log(actions);
    console.log(animationName);
    if (actions && animationName) {
      if (activeAction && actions[activeAction]) {
        actions[activeAction].fadeOut(0.5);
      }
      if (actions[animationName]) {
        const currentAction = actions[animationName]
        currentAction.reset()
        currentAction.setLoop(THREE.LoopOnce)  // Play animation only once
        currentAction.clampWhenFinished = true // Stop at the last frame when finished
        currentAction.play()

        // Optional: Add an event listener to detect when the action ends
        currentAction.getMixer().addEventListener('finished', () => {
          // Once animation finishes, reset to Idle if not hovering
          if (animationName !== 'Idel') {
            actions['Idel']?.reset().fadeIn(0.5).play()
          }
        })

        setActiveAction(animationName)
      }
    }
  }, [actions, animationName, activeAction]);
  
  useFrame((_, delta) => mixer.update(delta))

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <skinnedMesh
            name="body"
            geometry={nodes.body.geometry}
            material={materials['purpule shirt']}
            skeleton={nodes.body.skeleton}
          />
          <skinnedMesh
            name="hands"
            geometry={nodes.hands.geometry}
            material={materials.Skin}
            skeleton={nodes.hands.skeleton}
          />
          <skinnedMesh
            name="head_1"
            geometry={nodes.head_1.geometry}
            material={materials.Face}
            skeleton={nodes.head_1.skeleton}
          />
          <skinnedMesh
            name="legs"
            geometry={nodes.legs.geometry}
            material={materials.Jeans}
            skeleton={nodes.legs.skeleton}
          />
          <skinnedMesh
            name="neck_1"
            geometry={nodes.neck_1.geometry}
            material={materials.Skin}
            skeleton={nodes.neck_1.skeleton}
          />
          <skinnedMesh
            name="shirtArms"
            geometry={nodes.shirtArms.geometry}
            material={materials['purpule shirt']}
            skeleton={nodes.shirtArms.skeleton}
          />
          <skinnedMesh
            name="shoes"
            geometry={nodes.shoes.geometry}
            material={materials.shoe}
            skeleton={nodes.shoes.skeleton}
          />
          <primitive object={nodes.torso} />
          <primitive object={nodes.hand_controlL} />
          <primitive object={nodes.elbowL} />
          <primitive object={nodes.hand_controlR} />
          <primitive object={nodes.elbowR} />
          <primitive object={nodes.kneeL} />
          <primitive object={nodes.leg_controlL} />
          <primitive object={nodes.kneeR} />
          <primitive object={nodes.leg_controlR} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/hiAvatar.glb')

export default HiAvatar
