/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture, useVideoTexture } from '@react-three/drei'
import { gsap } from "gsap";
import { useGSAP } from '@gsap/react';

const Cellphone = ({isMobile, texture2, ...props}) => {
  const phoneRef = useRef();

    useGSAP(() => {
      gsap.to(phoneRef.current.position, {
        y: phoneRef.current.position.y + 0.2,
        duration: 1.2,
        repeat: -1,
        yoyo: true,
      })
   });
   
   //const txt = isMobile ? useTexture(props.texture2) : useVideoTexture(props.texture ? props.texture : '/projects/test.mov')
   let txt;
  if (isMobile && props.texture2) {
    txt = useTexture(props.texture2);
    console.log('Using texture2:', props.texture2);
  } else {
    txt = useVideoTexture(props.texture ? props.texture : '/projects/test.mov');
    console.log('Using videoTexture:', props.texture ? props.texture : '/projects/test.mov');
  }
  const { nodes, materials } = useGLTF('/models/phone.glb')
  return (
    <group {...props} dispose={null} ref={phoneRef}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_13.geometry}
        material={materials.phone_body}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials.Screen}
      >
         <meshBasicMaterial map={txt} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_10.geometry}
        material={materials.Black}
      />
    </group>
  )
}

useGLTF.preload('/modles/phone.glb')
export default Cellphone